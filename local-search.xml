<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>cpp学习（1）</title>
    <link href="/2024/10/24/cpp%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/"/>
    <url>/2024/10/24/cpp%E5%AD%A6%E4%B9%A0%EF%BC%881%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>#引用与指针<br>##引用部分<br>什么是引用？<br><br>引用是相当于一个变量的别名,有两种引用类型，一个是常量引用，另一个则是非常量引用  <br><br>为什么使用引用？<br><br>因为它是高效安全易用的<br><br>怎么使用引用？<br><br>###（1）引用的初始化和声明</p><pre><code class="cpp">&#123;Type&amp; name(var);//非常量引用const Type&amp; name(var);//常量引用/*在使用引用作为函数传参的方法时，非常量引用可以在函数内修改原始对象的值，即通过引用修改其引用的原始对象除有以上需求外，最好使用常量引用进行传参*/&#125;###（2）引用可以用来传递函数参数等等,例子如下```cpp&#123;test(int&amp; a)&#123;++a;//下面的main函数内定义的b的值也会改变&#125;test1(const&amp; a)&#123;    ++a;//不被允许，因为使用的是常量引用&#125;test2()&#123;    const int d&#123;1&#125;;    int&amp; a&#123;d&#125;;//无法引用绑定到d，因为d是不可修改的左值    const int&amp; c&#123;d&#125;;//可以绑定到常量d    c=2;//无法用常量引用修改对象    int e&#123;6&#125;;    int&amp; f &#123;e&#125;;    f=7;//e=7    const int&amp; g&#123;e&#125;;    g=8;//无法用常量引用修改对象&#125;int main ()&#123;    int b&#123;5&#125;;    test(b)&#125;/*基本数据类型可以直接按值传递，因为其传值的开销很小，而类或结构体等类型，传值复制开销高，因此使用（常量）引用传递*/&#125;### Tips:左值引用只能绑定到可修改的左值。&lt;br&gt;对常量的左值引用可以绑定到可修改的左值、不可修改的左值和右值。因此可以灵活使用&lt;br&gt;***##指针部分（原始指针部分知识）```cpp&#123;#include &lt;iostream&gt;int main() &#123;    int num&#123; 6 &#125;;    int num1&#123; 1 &#125;;    std::cout &lt;&lt; &amp;num &lt;&lt;&quot;\n&quot;;//&amp;是取地址操作，&amp;num 获取变量num所存储的内存地址    std::cout &lt;&lt; *(&amp;num) &lt;&lt; &quot;\n&quot;;//*是解引用运算符，可以用来访问内存地址所存储的值    int* ptr&#123; &amp;num &#125;;//这是一个指向变量num的指针变量，保存着num的地址    std::cout &lt;&lt; *ptr &lt;&lt; &quot;\n&quot;;//打印ptr指向的值    std::cout &lt;&lt; ptr &lt;&lt; &quot;\n&quot;;//打印的是指针变量ptr所指向对象的内存地址    *ptr = 9;//修改ptr所指向的num的值    ptr = &amp;num1;//修改指针变量ptr所指向的对象    std::cout &lt;&lt; *ptr &lt;&lt;&quot;\n&quot;;    std::cout &lt;&lt; ptr &lt;&lt; &quot;\n&quot;;    std::cout &lt;&lt; sizeof(ptr) &lt;&lt; &#39;\n&#39;; // 指针变量的大小与指针所指向的类型无关，可执行文件的位数（32 or 64）决定指针变量大小    //什么是悬空指针？例子如下    int num3&#123; 6 &#125;;//当num3变量被销毁时，下面这个就成悬空指针了    int* ptr1&#123; &amp;num3 &#125;;    //什么是空指针？    int* ptr2&#123;&#125;;    int* ptr3&#123; nullptr &#125;;//nullptr是空指针的关键字，可以显式地初始化指针或者可以为指针变量附上null值    //简单的判断指针是否为空指针，用if判断就行，if(xxx=nullptr)......    //常量指针是指向常量的指针，指针常量说的是这个指针本身是一个常量    int a&#123; 5 &#125;;    int b&#123; 6 &#125;;    int c&#123; 7 &#125;;    const int* ptr4&#123;&amp;a&#125;;//这是常量指针（指向常量值的指针）    *ptr4 = 55;//不能通过*来修改指针所指的常量    ptr4 = &amp;b;//不耽误修改指针所指向的对象    int* const ptr5&#123;&amp;b&#125;;//这是指针常量（const指针）    *ptr5 = 66;//可以    ptr5 = &amp;c;//这个指针本身是常量，所以不能修改指针所指向的对象    const int* const ptr6&#123;&amp;c&#125;;//这是指向常量的常量指针    return 0;&#125;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Cpp学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>为什么创建这个博客</title>
    <link href="/2024/10/10/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%9B%E5%BB%BA%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2024/10/10/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%88%9B%E5%BB%BA%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么搞个人博客？"><a href="#为什么搞个人博客？" class="headerlink" title="为什么搞个人博客？"></a>为什么搞个人博客？<br></h2><p>说白了就是闲着没事，打发时间，个人喜欢瞎折腾，这是最先发端的动力。</p><p>再有，本来就有偶尔记录写东西，写些随文的习惯，然后也喜欢把平时阅读的东西或者所看到的事物的感受记录下来，感觉把这些东西放在个人博客上很新奇，很满足我这种小孩心理。<br>其实更多的来讲，我和平常人一样都喜欢分享，但是对我来说，朋友圈抖音什么的并不是我理想的分享载体，因为很麻烦，说起来很有乐子，有些东西发出来需要设置分组；有些东西发出来又感觉显的着你，并不是所有人都是互相理解的，感觉和我熟的大部分人对我因仅停留在了基本认识阶段，这样一来误会便出现了</p><p>前者尽管倒是能发出来，而后者则只能憋在心里，很不舒服，正是有个人博客这种东西的出现，让我有了更多分享记录的选择，比起那些不了解我或者所谓熟悉我的人，我更愿意来和那些愿意主动来了解我且未曾相识的网友和自己分享诉说，从很多事情上来讲，我自己才是我最好的分享对象。</p><p>现在读文的你，倘若在现实生活中认识我，希望你能够把这里的我和现实中的我区分开来，换言之就是不要把在这里了解的我的东西应用在现实生活中来对待我，因为我在这里是自由的，是内在的，是隐蔽的我。而在现实生活中则是另一个我，是处在各种所谓的人际关系中的我，是处在各种形形色色因素影响下的我。</p><p><strong>当然了，我也很愿意去交各种朋友，下面是我的联系方式还有群聊，希望能和你成为知心朋友（即使是在网络上）</strong></p><p>QQ：3841020628<br>QQ-Group:820399193<br>E-mail：<a href="mailto:&#88;&#x69;&#x61;&#x6f;&#x79;&#x75;&#x61;&#110;&#x30;&#51;&#49;&#53;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#46;&#x63;&#111;&#x6d;">&#88;&#x69;&#x61;&#x6f;&#x79;&#x75;&#x61;&#110;&#x30;&#51;&#49;&#53;&#x40;&#x6f;&#x75;&#x74;&#108;&#111;&#x6f;&#107;&#46;&#x63;&#111;&#x6d;</a></p>]]></content>
    
    
    <categories>
      
      <category>自问自答</category>
      
    </categories>
    
    
    <tags>
      
      <tag>心声</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
